Here's a program inspired by Egon Schiele's artistic style, focusing on elongated figures and expressive poses:

```python
from helper import *

"""
a scene inspired by Egon Schiele
"""

@register()
def elongated_limb(length: float, width: float) -> Shape:
    return primitive_call('cylinder', color=(0.9, 0.8, 0.7), shape_kwargs={
        'radius': width / 2,
        'p0': (0, 0, 0),
        'p1': (0, length, 0)
    })

@register()
def torso(height: float, width: float, depth: float) -> Shape:
    return primitive_call('cube', color=(0.9, 0.8, 0.7), shape_kwargs={
        'scale': (width, height, depth)
    })

@register()
def head() -> Shape:
    return primitive_call('sphere', color=(0.9, 0.8, 0.7), shape_kwargs={
        'radius': 0.15
    })

@register()
def schiele_figure() -> Shape:
    # Create body parts
    body = library_call('torso', height=0.8, width=0.3, depth=0.2)
    head_shape = library_call('head')
    arm = library_call('elongated_limb', length=0.6, width=0.08)
    leg = library_call('elongated_limb', length=0.9, width=0.1)

    # Position head
    body_top = compute_shape_max(body)[1]
    head_bottom = compute_shape_min(head_shape)[1]
    head_positioned = transform_shape(head_shape, translation_matrix((0, body_top - head_bottom + 0.05, 0)))

    # Position arms
    left_arm = transform_shape(arm, rotation_matrix(math.pi/6, (0, 0, 1), (0, 0, 0)))
    left_arm = transform_shape(left_arm, translation_matrix((-0.15, body_top - 0.1, 0)))
    right_arm = transform_shape(arm, rotation_matrix(-math.pi/4, (0, 0, 1), (0, 0, 0)))
    right_arm = transform_shape(right_arm, translation_matrix((0.15, body_top - 0.1, 0)))

    # Position legs
    body_bottom = compute_shape_min(body)[1]
    left_leg = transform_shape(leg, rotation_matrix(math.pi/12, (0, 0, 1), (0, 0, 0)))
    left_leg = transform_shape(left_leg, translation_matrix((-0.1, body_bottom, 0)))
    right_leg = transform_shape(leg, rotation_matrix(-math.pi/12, (0, 0, 1), (0, 0, 0)))
    right_leg = transform_shape(right_leg, translation_matrix((0.1, body_bottom, 0)))

    return concat_shapes(body, head_positioned, left_arm, right_arm, left_leg, right_leg)

@register()
def schiele_composition() -> Shape:
    figure1 = library_call('schiele_figure')
    figure2 = library_call('schiele_figure')
    figure3 = library_call('schiele_figure')

    # Position and scale figures
    figure1 = transform_shape(figure1, scale_matrix(1.2, (0, 0, 0)))
    figure1 = transform_shape(figure1, translation_matrix((-0.5, -0.2, 0)))
    figure1 = transform_shape(figure1, rotation_matrix(math.pi/6, (0, 1, 0), (0, 0, 0)))

    figure2 = transform_shape(figure2, scale_matrix(0.9, (0, 0, 0)))
    figure2 = transform_shape(figure2, translation_matrix((0.5, 0, 0.2)))
    figure2 = transform_shape(figure2, rotation_matrix(-math.pi/8, (0, 1, 0), (0, 0, 0)))

    figure3 = transform_shape(figure3, scale_matrix(1.1, (0, 0, 0)))
    figure3 = transform_shape(figure3, translation_matrix((0, 0.3, -0.3)))
    figure3 = transform_shape(figure3, rotation_matrix(math.pi/4, (0, 1, 0), (0, 0, 0)))

    return concat_shapes(figure1, figure2, figure3)
```

This program creates a scene inspired by Egon Schiele's artistic style, known for his elongated figures and expressive poses. Here's a breakdown of the functions:

1. `elongated_limb`: Creates a cylindrical limb with a specified length and width.
2. `torso`: Creates a rectangular torso using a cube primitive.
3. `head`: Creates a spherical head.
4. `schiele_figure`: Assembles a complete figure using the body parts, positioning them with characteristic angular poses.
5. `schiele_composition`: Creates a composition with three figures, each positioned and scaled differently to create an interesting arrangement.

The composition captures some key elements of Schiele's style:
- Elongated limbs and torso
- Angular, expressive poses
- Figures positioned in unconventional ways
- A sense of tension and dynamism in the composition

This scene should evoke the feeling of a Schiele painting, with its characteristic distorted figures and expressive poses.